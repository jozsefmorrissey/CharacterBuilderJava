
--==========================  USERS  =====================--

-- DROP USER characterBuilder CASCADE;

-- CREATE USER characterBuilder
-- IDENTIFIED BY povertyrules
-- DEFAULT TABLESPACE users
-- TEMPORARY TABLESPACE temp;
--
-- GRANT connect to characterBuilder;
-- GRANT resource to characterBuilder;
-- GRANT CREATE SESSION TO characterBuilder;
-- GRANT CREATE TABLE TO characterBuilder;
-- GRANT CREATE VIEW TO characterBuilder;
-- GRANT CREATE MATERIALIZED VIEW TO characterBuilder;
-- GRANT create session to characterBuilder;
-- ALTER USER characterBuilder QUOTA 10m ON users;
--
-- conn characterBuilder/povertyrules


DROP USER characterBuilderTest CASCADE;

CREATE USER characterBuilderTest
IDENTIFIED BY povertyrules
DEFAULT TABLESPACE users
TEMPORARY TABLESPACE temp;

GRANT connect to characterBuilderTest;
GRANT resource to characterBuilderTest;
GRANT CREATE SESSION TO characterBuilderTest;
GRANT CREATE TABLE TO characterBuilderTest;
GRANT CREATE VIEW TO characterBuilderTest;
GRANT CREATE MATERIALIZED VIEW TO characterBuilderTest;
GRANT DEBUG CONNECT SESSION TO characterBuilderTest;
GRANT DEBUG ANY PROCEDURE TO characterBuilderTest;
GRANT create session to characterBuilderTest;
ALTER USER characterBuilderTest QUOTA 10m ON users;

conn characterBuilderTest/povertyrules

--==========================  SEQUENCES  =====================--

CREATE SEQUENCE PERMISSION_ID_SEQ START WITH 50;
CREATE SEQUENCE COORDINATE_ID_SEQ START WITH 110;
CREATE SEQUENCE LOCATION_ID_SEQ START WITH 2005;
CREATE SEQUENCE USER_ID_SEQ START WITH 1050;
CREATE SEQUENCE EVENT_ID_SEQ START WITH 50;
CREATE SEQUENCE EVENT_IMAGE_ID_SEQ START WITH 50;
CREATE SEQUENCE SKILL_MAP_ID_SEQ START WITH 5000;
CREATE SEQUENCE SKILL_DESCRIPTION_ID_SEQ START WITH 5000;
CREATE SEQUENCE EVENT_DESCRIPTION_ID_SEQ START WITH 5000;
CREATE SEQUENCE EVENT_TIME_ID_SEQ START WITH 5000;
CREATE SEQUENCE PARTICIPANT_ID_SEQ START WITH 5000;
CREATE SEQUENCE SKILL_ID_SEQ START WITH 1000;
CREATE SEQUENCE PROFILE_LINK_SEQ START WITH 1000;
CREATE SEQUENCE RATING_SEQ START WITH 5000;
CREATE SEQUENCE CATEGORY_SEQ START WITH 20;
CREATE SEQUENCE MESSAGE_ID_SEQ START WITH 20;

--==========================  TYPES  =====================--


--------- FORCE DROP DEPENDANT TYPES ----------
-- DROP TYPE DESCRIPTION_TABLE FORCE;
-- DROP TYPE DESCRIPTION_LIST_TABLE FORCE;


--------------- OBJECT TYPES ------------------
CREATE OR REPLACE TYPE DESCRIPTION_LIST AS OBJECT(
    ID NUMBER,
    POSITION NUMBER(3),
    TEXT VARCHAR(256)
);
/

CREATE OR REPLACE TYPE DESCRIPTION_TYPE AS OBJECT(
    ID NUMBER,
    TEXT CLOB
);
/

create or replace TYPE LINK_TYPE AS OBJECT (
    ID NUMBER,
    USER_ID NUMBER,
    CREATOR_ID NUMBER,
    IS_GOOD NUMBER(1),
    REASON VARCHAR2(256)
);
/

CREATE OR REPLACE TYPE PROFILE_LINK_TYPE AS OBJECT (
    ID NUMBER,
    USER_ID_1 NUMBER,
    USER_ID_2 NUMBER,
    CREATOR_ID NUMBER,
    IS_GOOD NUMBER(1),
    REASON VARCHAR(256)
);
/
--------------- TABLE TYPES -----------------
CREATE OR REPLACE TYPE DESCRIPTION_TABLE IS TABLE OF DESCRIPTION_TYPE;
/

CREATE OR REPLACE TYPE DESCRIPTION_LIST_TABLE IS TABLE OF DESCRIPTION_LIST;
/

CREATE OR REPLACE TYPE LINK_TABLE IS TABLE OF LINK_TYPE;
/

CREATE OR REPLACE TYPE NUMBER_ARRAY IS TABLE OF NUMBER;
/

CREATE OR REPLACE TYPE PROFILE_LINK_TABLE IS TABLE OF PROFILE_LINK_TYPE;
/

--==========================  TABLES  =====================--

CREATE TABLE PERMISSION (
  ID NUMBER PRIMARY KEY,
  PERMISSION_LEVEL VARCHAR2(16)
);

CREATE TABLE CB_USER (
  ID NUMBER PRIMARY KEY,
  NAME VARCHAR2(64),
  EMAIL VARCHAR2(128) UNIQUE,
  PHONE_NUMBER NUMBER(11),
  PERMISSION_ID NUMBER,
  PASSWORD VARCHAR(128),
  LAST_LOCATION_ID NUMBER(2),
  PHOTO BLOB,
  CONSTRAINT FK_USER_PERMISSION FOREIGN KEY (PERMISSION_ID) REFERENCES PERMISSION(ID)
);

CREATE TABLE COORDINATE (
  ID NUMBER PRIMARY KEY,
  LONGITUDE NUMBER(8,5),
  LATITUDE NUMBER(7,5)
);

CREATE TABLE LOCATION (
  ID NUMBER PRIMARY KEY,
  USER_ID NUMBER,
  COORDINATE_ID NUMBER,
  NAME VARCHAR2(32),
  RADIUS_METERS NUMBER(8),
  CONSTRAINT FK_LOCATION_USER FOREIGN KEY (USER_ID) REFERENCES CB_USER(ID),
  CONSTRAINT FK_LOCATION_COORDINATE FOREIGN KEY (COORDINATE_ID) REFERENCES COORDINATE(ID)
);

CREATE TABLE EVENT (
  ID NUMBER PRIMARY KEY,
  TITLE VARCHAR2(128),
  POSTER_ID NUMBER
);

CREATE TABLE EVENT_IMAGE (
    ID NUMBER PRIMARY KEY,
    EVENT_ID NUMBER,
    PHOTO BLOB,
    POSITION NUMBER (2),
    CONSTRAINT FK_EVENT_IMAGE_EVENT FOREIGN KEY (EVENT_ID) REFERENCES EVENT(ID)
);

CREATE TABLE SKILL(
  ID NUMBER PRIMARY KEY,
  NAME VARCHAR2(32) UNIQUE
);

CREATE TABLE  SKILL_MAP(
  ID NUMBER PRIMARY KEY,
  SKILL_ID NUMBER,
  EVENT_ID NUMBER,
  ATTRIBUTER_ID NUMBER,
  RECIEVER_ID NUMBER,
  VALUE NUMBER(1),
  ATTR_SKILL_SNP_SHT_VALUE NUMBER(1),
  CONSTRAINT FK_EVENT_ID_EVENT FOREIGN KEY (EVENT_ID) REFERENCES EVENT(ID),
  CONSTRAINT FK_ATTRIBUTER_ID_USER FOREIGN KEY (ATTRIBUTER_ID) REFERENCES CB_USER(ID),
  CONSTRAINT FK_RECIEVER_ID_USER FOREIGN KEY (RECIEVER_ID) REFERENCES CB_USER(ID),
  CONSTRAINT FK_SKILL_MAP_SKILL FOREIGN KEY (SKILL_ID) REFERENCES SKILL(ID),
  CONSTRAINT MAP_RECIEVER_ATTRIBUTER_NOT_EQ CHECK (ATTRIBUTER_ID != RECIEVER_ID)
);

CREATE TABLE SKILL_DESCRIPTION (
    ID NUMBER PRIMARY KEY,
    SKILL_MAP_ID NUMBER,
    DESCRIPTION VARCHAR(256),
    POSITION NUMBER(4),
    CONSTRAINT FK_SKILL_DESCRIPTION_MAP FOREIGN KEY (SKILL_MAP_ID) REFERENCES SKILL_MAP(ID)
);

CREATE TABLE EVENT_DESCRIPTION (
    ID NUMBER PRIMARY KEY,
    EVENT_ID NUMBER,
    DESCRIPTION VARCHAR(256),
    POSITION NUMBER(4),
    CONSTRAINT FK_EVENT_DESCRIPTION_MAP FOREIGN KEY (EVENT_ID) REFERENCES EVENT(ID)
);

CREATE TABLE EVENT_TIME (
  ID NUMBER PRIMARY KEY,
  EVENT_ID NUMBER,
  TIME_STAMP TIMESTAMP,
  CONSTRAINT FK_EVENT_TIME_EVENT FOREIGN KEY (EVENT_ID) REFERENCES EVENT(ID)
);

CREATE TABLE PARTICIPANT (
  ID NUMBER,
  EVENT_TIME_ID NUMBER,
  USER_ID NUMBER,
  CONSTRAINT FK_PARTICIPANT_EVENT_TIME FOREIGN KEY (EVENT_TIME_ID) REFERENCES EVENT_TIME(ID),
  CONSTRAINT FK_PARTICIPANT_USER FOREIGN KEY (USER_ID) REFERENCES CB_USER(ID),
  CONSTRAINT COMP_PK_PARTICIPANT PRIMARY KEY (EVENT_TIME_ID, USER_ID)
);

CREATE TABLE PROFILE_LINK (
  ID NUMBER,
  USER_ID_1 NUMBER,
  USER_ID_2 NUMBER,
  CREATOR_ID NUMBER,
  IS_GOOD NUMBER(1),
  REASON VARCHAR2(256),
  CONSTRAINT FK_LINK_USER_1 FOREIGN KEY (USER_ID_1) REFERENCES CB_USER(ID),
  CONSTRAINT FK_LINK_USER_2 FOREIGN KEY (USER_ID_2) REFERENCES CB_USER(ID),
  CONSTRAINT FK_LINK_CREATOR_USER FOREIGN KEY (CREATOR_ID) REFERENCES CB_USER(ID),
  CONSTRAINT COMP_PK_PROFILE_LINK PRIMARY KEY (USER_ID_1, USER_ID_2, CREATOR_ID),
  CONSTRAINT LINK_REC_ATTR_NOT_EQ CHECK (USER_ID_1 != USER_ID_2)
);

CREATE TABLE RATING (
  ID NUMBER,
  ATTRIBUTER_ID NUMBER,
  RECIEVER_ID NUMBER,
  DESCRIPTION VARCHAR2(256),
  TIME_STAMP TIMESTAMP,
  VALUE NUMBER(1),
  ATTRIBUTER_SNAPSHOT_RATING NUMBER(1),
  CONSTRAINT FK_RAT_ATTRIBUTER_ID_USER FOREIGN KEY (ATTRIBUTER_ID) REFERENCES CB_USER(ID),
  CONSTRAINT FK_RAT_RECIEVER_ID_USER FOREIGN KEY (RECIEVER_ID) REFERENCES CB_USER(ID),
  CONSTRAINT RECIEVER_ATTRIBUTER_NOT_EQ CHECK (ATTRIBUTER_ID != RECIEVER_ID)
);

CREATE TABLE EVENT_MESSAGE(
  ID NUMBER,
  SENDER_ID NUMBER,
  EVENT_ID NUMBER,
  MESSAGE VARCHAR2(256),
  TIME_STAMP TIMESTAMP,
  CONSTRAINT FK_EVENT_MSG FOREIGN KEY (EVENT_ID) REFERENCES EVENT(ID),
  CONSTRAINT FK_SEND_E_MSG FOREIGN KEY (SENDER_ID) REFERENCES CB_USER(ID)
);

CREATE TABLE EVENT_TIME_MESSAGE(
  ID NUMBER,
  SENDER_ID NUMBER,
  EVENT_TIME_ID NUMBER,
  MESSAGE VARCHAR2(256),
  TIME_STAMP TIMESTAMP,
  CONSTRAINT FK_EVENT_TIME_ET_MESSAGE FOREIGN KEY (EVENT_TIME_ID) REFERENCES EVENT_TIME(ID),
  CONSTRAINT FK_SEND_ET_MSG_USER FOREIGN KEY (SENDER_ID) REFERENCES CB_USER(ID)
);

CREATE TABLE MESSAGE(
  ID NUMBER,
  SENDER_ID NUMBER,
  RECIEVER_ID NUMBER,
  MESSAGE VARCHAR2(256),
  TIME_STAMP TIMESTAMP,
  CONSTRAINT FK_SEND_U_MSG_USER FOREIGN KEY (SENDER_ID) REFERENCES CB_USER(ID),
  CONSTRAINT FK_REC_U_MSG_USER FOREIGN KEY (RECIEVER_ID) REFERENCES CB_USER(ID)
);

CREATE TABLE USER_FLAG(
  ID NUMBER,
  BEARER_ID NUMBER,
  TARGET_ID NUMBER,
  CONSTRAINT FK_U_FLAG_BEARER_USER FOREIGN KEY (BEARER_ID) REFERENCES CB_USER(ID),
  CONSTRAINT FK_U_FLAG_TARGET_USER FOREIGN KEY (TARGET_ID) REFERENCES CB_USER(ID)
);

CREATE TABLE EVENT_FLAG(
  ID NUMBER,
  BEARER_ID NUMBER,
  TARGET_ID NUMBER,
  CONSTRAINT FK_E_FLAG_BEARER_USER FOREIGN KEY (BEARER_ID) REFERENCES CB_USER(ID),
  CONSTRAINT FK_E_FLAG_TARGET_EVENT FOREIGN KEY (TARGET_ID) REFERENCES EVENT(ID)
);

CREATE TABLE CATEGORY(
  ID NUMBER PRIMARY KEY,
  NAME VARCHAR2(32),
  POST_DESCRIPTION VARCHAR2(256),
  ATTEND_DESCRIPTION VARCHAR2(256)
);

CREATE TABLE CATEGORY_PREFERENCE(
  ID NUMBER,
  USER_ID NUMBER,
  CATEGORY_ID NUMBER,
  POSITION NUMBER(2),
  CONSTRAINT FK_CAT_PREF_CAT FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORY(ID),
  CONSTRAINT FK_CAT_PREF_USER FOREIGN KEY (USER_ID) REFERENCES CB_USER(ID)
);

--==========================  FUNCTIONS  =====================--

-- Prints PROFILE_LINK_TABLE's, used for debugging.
create or replace FUNCTION PRINT_TABLE_PROFILE_LINKS(TABLE_NAME VARCHAR2, TBL PROFILE_LINK_TABLE)
    RETURN NUMBER
    IS
    BEGIN
        DBMS_OUTPUT.PUT_LINE(TABLE_NAME || ':');
        FOR CLM IN (SELECT * FROM TABLE(TBL))
        LOOP
            DBMS_OUTPUT.PUT_LINE(CLM.USER_ID_1 ||  ':' || CLM.USER_ID_2);
        END LOOP;
        RETURN 1;
    END;
/

-- Prints LINK_TABLE's, used for debugging.
create or replace FUNCTION PRINT_TABLE_LINKS(TABLE_NAME VARCHAR2, TBL LINK_TABLE)
    RETURN NUMBER
    IS
    BEGIN
        DBMS_OUTPUT.PUT_LINE(TABLE_NAME || ':');
        FOR CLM IN (SELECT * FROM TABLE(TBL))
        LOOP
            DBMS_OUTPUT.PUT_LINE(CLM.USER_ID);
        END LOOP;
        RETURN 1;
    END;
/

-- Used to combine two LINK_TABLE's
create or replace FUNCTION CONCAT_TABLE_LINK_ARR(ARR1 LINK_TABLE, ARR2 LINK_TABLE)
    RETURN LINK_TABLE
    IS
    IND NUMBER;
    RET_VAL LINK_TABLE := LINK_TABLE();
    BEGIN
        IND := 0;
        FOR CLM IN (SELECT * FROM TABLE(ARR1))
        LOOP
            IND := IND + 1;
            RET_VAL.EXTEND;
            RET_VAL(RET_VAL.COUNT) := LINK_TYPE(IND, CLM.USER_ID, CLM.CREATOR_ID, CLM.IS_GOOD, CLM.REASON);
        END LOOP;

        FOR CLM IN (SELECT * FROM TABLE(ARR2))
        LOOP
            IND := IND + 1;
            RET_VAL.EXTEND;
            RET_VAL(RET_VAL.COUNT) := LINK_TYPE(IND, CLM.USER_ID, CLM.CREATOR_ID, CLM.IS_GOOD, CLM.REASON);
        END LOOP;
        RETURN RET_VAL;
    END;
/

-- Used to combine PROFILE_LINK_TABLE's...
-- A better man could probably do this with select and insert.
create or replace FUNCTION CONCAT_TABLE_PROFILE_LINK(ARR1 PROFILE_LINK_TABLE, ARR2 PROFILE_LINK_TABLE)
    RETURN PROFILE_LINK_TABLE
    IS
    IND NUMBER;
    RET_VAL PROFILE_LINK_TABLE := PROFILE_LINK_TABLE();
    BEGIN
        FOR CLM IN (SELECT * FROM TABLE(ARR1))
        LOOP
            IND := IND + 1;
            RET_VAL.EXTEND;
            RET_VAL(RET_VAL.COUNT) := PROFILE_LINK_TYPE(IND, CLM.USER_ID_1, CLM.USER_ID_2, CLM.CREATOR_ID, CLM.IS_GOOD, CLM.REASON);
        END LOOP;

        FOR CLM IN (SELECT * FROM TABLE(ARR2))
        LOOP
            IND := IND + 1;
            RET_VAL.EXTEND;
            RET_VAL(RET_VAL.COUNT) := PROFILE_LINK_TYPE(IND, CLM.USER_ID_1, CLM.USER_ID_2,  CLM.CREATOR_ID, CLM.IS_GOOD, CLM.REASON);
        END LOOP;
        RETURN RET_VAL;
    END;
/

-- THIS FUNCTION IS TO BE USED TO CONCATINATE
-- ALL TEXTS WITH THE TEXTS SHARING THE SAME ID
create or replace FUNCTION CONCATINATE_DESCRIPTIONS(DESC_LIST DESCRIPTION_LIST_TABLE)
    RETURN DESCRIPTION_TABLE
    IS
    TEXT CLOB;
    DESC_ID NUMBER;
    CURR_DESC_ID NUMBER;
    TBL_COUNT NUMBER;
    RET_VAL DESCRIPTION_TABLE := DESCRIPTION_TABLE();
    BEGIN

        DESC_ID := 0;
        FOR O IN (SELECT * FROM TABLE(DESC_LIST))
        LOOP
            CURR_DESC_ID := O.ID;

         IF CURR_DESC_ID != DESC_ID THEN
            RET_VAL.EXTEND;
            RET_VAL(RET_VAL.COUNT) := DESCRIPTION_TYPE(DESC_ID, TEXT);
            DESC_ID := CURR_DESC_ID;
            TEXT := '';
        END IF;

            TEXT := TEXT || O.TEXT;
        END LOOP;
        RET_VAL.EXTEND;
        RET_VAL(RET_VAL.COUNT) := DESCRIPTION_TYPE(CURR_DESC_ID, TEXT);
        RETURN RET_VAL;
    END;
/

-- THIS FUNCTION SIMPLY ORDERS THE EVENT_DESCRIPTION TABLE
-- ALLOWING CONCATINATE_DESCRIPTIONS TO CONCATINATE ALL WITH
-- THE SAME IDS IN THE ORDER DICTATED BY POSITION.
create or replace FUNCTION CONCAT_EVENT_DESC
    RETURN DESCRIPTION_TABLE
    IS
    DESC_LIST DESCRIPTION_LIST_TABLE;
    RET_VAL DESCRIPTION_TABLE := DESCRIPTION_TABLE();
    BEGIN
        SELECT * BULK COLLECT INTO DESC_LIST FROM
            (select DESCRIPTION_LIST(EVENT_ID, POSITION, DESCRIPTION)
            from EVENT_DESCRIPTION
            ORDER BY ID, POSITION);
        RETURN CONCATINATE_DESCRIPTIONS(DESC_LIST);
    END;
/

-- THIS FUNCTION SIMPLY ORDERS THE EVENT_DESCRIPTION TABLE
-- ALLOWING CONCATINATE_DESCRIPTIONS TO CONCATINATE ALL WITH
-- THE SAME IDS IN THE ORDER DICTATED BY POSITION.
create or replace FUNCTION CONCAT_SKILL_DESC
    RETURN DESCRIPTION_TABLE
    IS
    DESC_LIST DESCRIPTION_LIST_TABLE;
    RET_VAL DESCRIPTION_TABLE := DESCRIPTION_TABLE();
    BEGIN
        SELECT * BULK COLLECT INTO DESC_LIST FROM
            (select DESCRIPTION_LIST(SKILL_MAP_ID, POSITION, DESCRIPTION)
            from SKILL_DESCRIPTION
            ORDER BY ID, POSITION);
        RETURN CONCATINATE_DESCRIPTIONS(DESC_LIST);
    END;
/

-- This function simply returns a PROFILE_LINK_TABLE of the
-- search results from the actual PROFILE_LINK table refining
-- results to where USER_ID_1 = S_ID or USER_ID_2 = S_ID.
create or replace FUNCTION FIND_PROFILE_LINKS(S_ID NUMBER)
  RETURN PROFILE_LINK_TABLE
  IS
  LIST_LINKS PROFILE_LINK_TABLE;

  RET_VAL PROFILE_LINK_TABLE := PROFILE_LINK_TABLE();
  BEGIN
      SELECT * BULK COLLECT INTO LIST_LINKS FROM
          (SELECT PROFILE_LINK_TYPE(ID, USER_ID_1, USER_ID_2, CREATOR_ID, IS_GOOD, REASON)
            FROM PROFILE_LINK
            WHERE USER_ID_2 = S_ID OR USER_ID_1 = S_ID);
      RETURN LIST_LINKS;
END;
/

-- This function returns a LINK_TABLE for userIds that don't
-- exist within the HAY_STACK LINK_TABLE.
create or replace FUNCTION GET_NEW_LINKS(HAY_STACK LINK_TABLE, NEEDLES PROFILE_LINK_TABLE)
    RETURN LINK_TABLE
    IS
    C NUMBER;
    NEW_LINKS LINK_TABLE := LINK_TABLE();
    BEGIN
        FOR PL IN (SELECT * FROM TABLE(NEEDLES))
        LOOP
            SELECT COUNT(*) INTO C FROM TABLE(HAY_STACK) WHERE USER_ID = PL.USER_ID_1;
            IF C = 0 THEN
                NEW_LINKS.EXTEND;
                NEW_LINKS(NEW_LINKS.COUNT) := LINK_TYPE(PL.ID, PL.USER_ID_1, PL.CREATOR_ID, PL.IS_GOOD, PL.REASON);
            END IF;

            SELECT COUNT(*) INTO C FROM TABLE(HAY_STACK) WHERE USER_ID = PL.USER_ID_2;
            IF C = 0 THEN
                NEW_LINKS.EXTEND;
                NEW_LINKS(NEW_LINKS.COUNT) := LINK_TYPE(PL.ID, PL.USER_ID_2, PL.CREATOR_ID, PL.IS_GOOD, PL.REASON);
            END IF;

        END LOOP;
    RETURN NEW_LINKS;
END;
/

-- This function returns a reference to all profile links
-- that can be connected to a given userId by including all
-- links to linked ids aswell, in the form of a LINK_TABLE.
create or replace FUNCTION GET_ALL_LINKS(S_ID NUMBER)
  RETURN LINK_TABLE
IS
  UNIQUE_LINKS LINK_TABLE := LINK_TABLE();
  NEW_UNIQUE_LINKS LINK_TABLE := LINK_TABLE();

  FOUND_PL PROFILE_LINK_TABLE := PROFILE_LINK_TABLE();

  LINK_COUNT NUMBER;
  PROCESSED NUMBER;

  CURR LINK_TYPE;

  RET_VAL LINK_TABLE := LINK_TABLE();
BEGIN
    UNIQUE_LINKS.EXTEND;
    UNIQUE_LINKS(UNIQUE_LINKS.COUNT) := LINK_TYPE(0, S_ID, 0, 0, '');

    LINK_COUNT := 1;
    PROCESSED := 0;

    WHILE LINK_COUNT > PROCESSED
    LOOP
        PROCESSED := PROCESSED + 1;
        CURR := UNIQUE_LINKS(PROCESSED);

        FOUND_PL := FIND_PROFILE_LINKS(CURR.USER_ID);

        NEW_UNIQUE_LINKS := GET_NEW_LINKS(UNIQUE_LINKS, FOUND_PL);

        UNIQUE_LINKS := CONCAT_TABLE_LINK_ARR(UNIQUE_LINKS, NEW_UNIQUE_LINKS);

        SELECT COUNT(*) INTO LINK_COUNT FROM TABLE(UNIQUE_LINKS);
    END LOOP;
    RETURN UNIQUE_LINKS;
END;
/

--==========================  VIEWS  =====================--

CREATE VIEW EVENT_DESCRIPTION_TBL AS
    SELECT * FROM TABLE(CONCAT_EVENT_DESC) WHERE TEXT IS NOT NULL;

CREATE VIEW SKILL_DESCRIPTION_TBL AS
    SELECT * FROM TABLE(CONCAT_SKILL_DESC) WHERE TEXT IS NOT NULL;

--==========================  JUnit Test Data  =====================--

INSERT INTO PERMISSION (ID, PERMISSION_LEVEL) VALUES (1, 'ADMIN');
INSERT INTO PERMISSION (ID, PERMISSION_LEVEL) VALUES (2, 'USER');

INSERT INTO CB_USER (ID, NAME, EMAIL, PHONE_NUMBER, PERMISSION_ID, LAST_LOCATION_ID, PASSWORD, PHOTO) VALUES (1, 'Jozsef Morrissey', 'jozsef.morrissey@gmail.com', 12172548654, 1, 0, 'password', 'FFD8FFE000104A46494600010100000100010000FFDB004300100B0C0E0C0A100E0D0E1211101318281A181616183123251D283A333D3C3933383740485C4E404457453738506D51575F626768673E4D71797064785C656763FFC0000B080032003201011100FFC4001F0000010501010101010100000000000000000102030405060708090A0BFFC400B5100002010303020403050504040000017D01020300041105122131410613516107227114328191A1082342B1C11552D1F02433627282090A161718191A25262728292A3435363738393A434445464748494A535455565758595A636465666768696A737475767778797A838485868788898A92939495969798999AA2A3A4A5A6A7A8A9AAB2B3B4B5B6B7B8B9BAC2C3C4C5C6C7C8C9CAD2D3D4D5D6D7D8D9DAE1E2E3E4E5E6E7E8E9EAF1F2F3F4F5F6F7F8F9FAFFDA0008010100003F00EFE8A28A28A2A3FB44226F27CE8FCDEBB370DDF9543A9DFC3A658C97539F9507007563D80AF37D4FC43A8EA52B179DE28BB451315503FAFE355AD354BFB3903DBDDCC8476DE483F5078AF41F0D6BCBACDB32C8A12E62C6F51D08FEF0AD696E21836F9D3471EEE06F6033F9D495E5F7DA56AF6DA84D33DBDC3488E64F3D149CF3F781156357D4EEEFFC3B64D752EF633C818E31F740C671F535B771E12D3A3D0DE5577F3D22F33CEDFC12067A74C551F09F87EC753B092EAF373B6F2810315DB8039E3BF350E9D11D1FC5B736F6D2E5238E41B8F3C6CDC33F4205654C9AB6B727DAE482E2E89C28658CED1EC31C57536DA378816DA25FB7F9784036173F2F1D2BAA9268A204C9222003277301815CAEBD75A5EB71FF0067594E8D77B8C91B0185770395DDEA4571EF7F7DF65FB1BDCCDE42F1E5163818ED8FE949697F77645BEC9732C3BFEF6C6C66B7BC3AF69A591A8EAD21CDD8291291BC95FE276F63D3F3AEE2D6F6CEE6157B6B889E3E836B0FCAAC5796DDE95AADCEB124335BCB25C3C872E54ED3CF5CF4C574FA5782A3B69639EF2E5A4951832AC5F2A820E473D4FE95CE78A6C5ECF5DB9F918472B798871C1CF27F5CD654304B3CAB1451B33B9DAA0027935E85A8F84ADAFA18409A48A68625895872B803D2B8ED53C3F7FA6DC88DA16995BEEC912120FB7B1AE96DACFC502D6202E028083E566191C743EF5D6D2D2628000E8296929692968A28A28AFFD9');
INSERT INTO CB_USER (ID, NAME, EMAIL, PHONE_NUMBER, PERMISSION_ID, LAST_LOCATION_ID, PASSWORD, PHOTO) VALUES (2, 'Jerad Morrissey', 'red9130@gmail.com', 12172941286, 1, 0, 'password', 'FFD8FFE000104A46494600010100000100010000FFDB004300100B0C0E0C0A100E0D0E1211101318281A181616183123251D283A333D3C3933383740485C4E404457453738506D51575F626768673E4D71797064785C656763FFC0000B080032003201011100FFC4001F0000010501010101010100000000000000000102030405060708090A0BFFC400B5100002010303020403050504040000017D01020300041105122131410613516107227114328191A1082342B1C11552D1F02433627282090A161718191A25262728292A3435363738393A434445464748494A535455565758595A636465666768696A737475767778797A838485868788898A92939495969798999AA2A3A4A5A6A7A8A9AAB2B3B4B5B6B7B8B9BAC2C3C4C5C6C7C8C9CAD2D3D4D5D6D7D8D9DAE1E2E3E4E5E6E7E8E9EAF1F2F3F4F5F6F7F8F9FAFFDA0008010100003F00EFE8A28A28A2A3FB44226F27CE8FCDEBB370DDF9543A9DFC3A658C97539F9507007563D80AF37D4FC43A8EA52B179DE28BB451315503FAFE355AD354BFB3903DBDDCC8476DE483F5078AF41F0D6BCBACDB32C8A12E62C6F51D08FEF0AD696E21836F9D3471EEE06F6033F9D495E5F7DA56AF6DA84D33DBDC3488E64F3D149CF3F781156357D4EEEFFC3B64D752EF633C818E31F740C671F535B771E12D3A3D0DE5577F3D22F33CEDFC12067A74C551F09F87EC753B092EAF373B6F2810315DB8039E3BF350E9D11D1FC5B736F6D2E5238E41B8F3C6CDC33F4205654C9AB6B727DAE482E2E89C28658CED1EC31C57536DA378816DA25FB7F9784036173F2F1D2BAA9268A204C9222003277301815CAEBD75A5EB71FF0067594E8D77B8C91B0185770395DDEA4571EF7F7DF65FB1BDCCDE42F1E5163818ED8FE949697F77645BEC9732C3BFEF6C6C66B7BC3AF69A591A8EAD21CDD8291291BC95FE276F63D3F3AEE2D6F6CEE6157B6B889E3E836B0FCAAC5796DDE95AADCEB124335BCB25C3C872E54ED3CF5CF4C574FA5782A3B69639EF2E5A4951832AC5F2A820E473D4FE95CE78A6C5ECF5DB9F918472B798871C1CF27F5CD654304B3CAB1451B33B9DAA0027935E85A8F84ADAFA18409A48A68625895872B803D2B8ED53C3F7FA6DC88DA16995BEEC912120FB7B1AE96DACFC502D6202E028083E566191C743EF5D6D2D2628000E8296929692968A28A28AFFD9');
INSERT INTO CB_USER (ID,NAME,EMAIL,PHONE_NUMBER,PERMISSION_ID,LAST_LOCATION_ID,PASSWORD) VALUES (3,'Susan Bernard','in@imperdiet.com',11239283494,2,0,'Cras');
INSERT INTO CB_USER (ID,NAME,EMAIL,PHONE_NUMBER,PERMISSION_ID,LAST_LOCATION_ID,PASSWORD) VALUES (4,'Calvin Singleton','gravida.mauris.ut@velitduisemper.org',17747573550,2,0,'ultrices. Duis volutpat nunc');
INSERT INTO CB_USER (ID,NAME,EMAIL,PHONE_NUMBER,PERMISSION_ID,LAST_LOCATION_ID,PASSWORD) VALUES (5,'Haviva Hull','egestas.blandit@Ut.co.uk',10640084869,2,0,'bibendum. Donec');
INSERT INTO CB_USER (ID,NAME,EMAIL,PHONE_NUMBER,PERMISSION_ID,LAST_LOCATION_ID,PASSWORD) VALUES (6,'Amal Figueroa','In.faucibus@velfaucibus.ca',11438183975,2,0,'erat volutpat. Nulla');
INSERT INTO CB_USER (ID,NAME,EMAIL,PHONE_NUMBER,PERMISSION_ID,LAST_LOCATION_ID,PASSWORD) VALUES (7,'Sade Reid','Pellentesque.ultricies.dignissim@ategestas.co.uk',10529634323,2,0,'ac');
INSERT INTO CB_USER (ID,NAME,EMAIL,PHONE_NUMBER,PERMISSION_ID,LAST_LOCATION_ID,PASSWORD) VALUES (8,'Jared Estrada','convallis.ligula.Donec@estarcuac.org',12510775286,2,0,'est arcu ac');
INSERT INTO CB_USER (ID,NAME,EMAIL,PHONE_NUMBER,PERMISSION_ID,LAST_LOCATION_ID,PASSWORD) VALUES (9,'Lana Abbott','posuere@enim.edu',19305474451,2,0,'malesuada id, erat. Etiam');
INSERT INTO CB_USER (ID,NAME,EMAIL,PHONE_NUMBER,PERMISSION_ID,LAST_LOCATION_ID,PASSWORD) VALUES (10,'Edan Chavez','dapibus@in.net',11619649031,2,0,'mauris');
INSERT INTO CB_USER (ID,NAME,EMAIL,PHONE_NUMBER,PERMISSION_ID,LAST_LOCATION_ID,PASSWORD) VALUES (11,'Fletcher Crosby','nunc.sed.libero@elementumlorem.net',14156213310,2,0,'erat. Vivamus nisi.');
INSERT INTO CB_USER (ID,NAME,EMAIL,PHONE_NUMBER,PERMISSION_ID,LAST_LOCATION_ID,PASSWORD) VALUES (12,'Adrian Goodman','dictum.Phasellus@consectetuermauris.org',15668695034,2,0,'ipsum nunc id');
INSERT INTO CB_USER (ID,NAME,EMAIL,PHONE_NUMBER,PERMISSION_ID,LAST_LOCATION_ID,PASSWORD) VALUES (13,'Sean Alston','Nam.porttitor.scelerisque@Utsagittislobortis.net',13145400109,2,0,'Pellentesque tincidunt');
INSERT INTO CB_USER (ID,NAME,EMAIL,PHONE_NUMBER,PERMISSION_ID,LAST_LOCATION_ID,PASSWORD) VALUES (14,'Emerald Horn','nibh.enim.gravida@CuraeDonectincidunt.com',10058874795,2,0,'sit amet, faucibus ut,');
INSERT INTO CB_USER (ID,NAME,EMAIL,PHONE_NUMBER,PERMISSION_ID,LAST_LOCATION_ID,PASSWORD) VALUES (15,'Reese Jimenez','pellentesque.a@duinec.ca',17261370057,2,0,'dolor. Fusce mi lorem,');

INSERT INTO EVENT (ID, TITLE, POSTER_ID) VALUES (1, 'Debate', 1);
INSERT INTO EVENT (ID, TITLE, POSTER_ID) VALUES (2, 'Code Chalange', 1);
INSERT INTO EVENT (ID, TITLE, POSTER_ID) VALUES (3, 'Dance Off(Pants Off)', 1);

INSERT INTO EVENT_TIME (ID, EVENT_ID, TIME_STAMP) VALUES (1, 1, TO_TIMESTAMP('10-SEP-0214:10:10.123000','DD-MON-RRHH24:MI:SS.FF'));
INSERT INTO EVENT_TIME (ID, EVENT_ID, TIME_STAMP) VALUES (2, 1, TO_TIMESTAMP('10-OCT-0214:10:10.123000','DD-MON-RRHH24:MI:SS.FF'));
INSERT INTO EVENT_TIME (ID, EVENT_ID, TIME_STAMP) VALUES (3, 1, TO_TIMESTAMP('10-NOV-0214:10:10.123000','DD-MON-RRHH24:MI:SS.FF'));

INSERT INTO EVENT_DESCRIPTION (ID, EVENT_ID, DESCRIPTION, POSITION) VALUES (1, 1, 'This event is the bomb digity! ', 1);
INSERT INTO EVENT_DESCRIPTION (ID, EVENT_ID, DESCRIPTION, POSITION) VALUES (2, 1, 'As proof of that chech out the next sentance. ', 2);
INSERT INTO EVENT_DESCRIPTION (ID, EVENT_ID, DESCRIPTION, POSITION) VALUES (3, 1, 'This description is the combination of 3 database entries. ', 3);
INSERT INTO EVENT_DESCRIPTION (ID, EVENT_ID, DESCRIPTION, POSITION) VALUES (4, 1, 'Booya!... thats 4', 4);

INSERT INTO EVENT_DESCRIPTION (ID, EVENT_ID, DESCRIPTION, POSITION) VALUES (5, 2, 'This event is the bomb digity! ', 1);
INSERT INTO EVENT_DESCRIPTION (ID, EVENT_ID, DESCRIPTION, POSITION) VALUES (6, 2, 'As proof of that chech out the next sentance. ', 2);
INSERT INTO EVENT_DESCRIPTION (ID, EVENT_ID, DESCRIPTION, POSITION) VALUES (7, 2, 'This description is the combination of 3 database entries. ', 3);
INSERT INTO EVENT_DESCRIPTION (ID, EVENT_ID, DESCRIPTION, POSITION) VALUES (8, 2, 'Bodega!... thats 4', 4);

INSERT INTO EVENT_IMAGE (ID, EVENT_ID, PHOTO, POSITION) VALUES (1, 1,

    1);
INSERT INTO EVENT_IMAGE (ID, EVENT_ID, PHOTO, POSITION) VALUES (2, 1,

    2);


INSERT INTO SKILL (ID, NAME) VALUES (1, 'Hard Working');
INSERT INTO SKILL (ID, NAME) VALUES (2, 'ANALITICAL');

INSERT INTO SKILL_MAP (ID, SKILL_ID, EVENT_ID, ATTRIBUTER_ID, RECIEVER_ID, VALUE, ATTR_SKILL_SNP_SHT_VALUE)
    VALUES (1, 1, 1, 2, 1, 9, 8);
INSERT INTO SKILL_MAP (ID, SKILL_ID, EVENT_ID, ATTRIBUTER_ID, RECIEVER_ID, VALUE, ATTR_SKILL_SNP_SHT_VALUE)
    VALUES (2, 2, 1, 2, 1, 9, 7);
INSERT INTO SKILL_MAP (ID, SKILL_ID, EVENT_ID, ATTRIBUTER_ID, RECIEVER_ID, VALUE, ATTR_SKILL_SNP_SHT_VALUE)
    VALUES (3, 1, 2, 1, 2, 2, 9);

INSERT INTO SKILL_DESCRIPTION (ID, SKILL_MAP_ID, DESCRIPTION, POSITION) VALUES (1, 1, 'This is the skill that never ends. ', 1);
INSERT INTO SKILL_DESCRIPTION (ID, SKILL_MAP_ID, DESCRIPTION, POSITION) VALUES (2, 1, 'It goes on and on my friends. ', 2);
INSERT INTO SKILL_DESCRIPTION (ID, SKILL_MAP_ID, DESCRIPTION, POSITION) VALUES (3, 1, 'some people started concatinating not knowing what it was ', 3);
INSERT INTO SKILL_DESCRIPTION (ID, SKILL_MAP_ID, DESCRIPTION, POSITION) VALUES (4, 1, 'and they just kept concatinating forever just because', 4);

INSERT INTO SKILL_DESCRIPTION (ID, SKILL_MAP_ID, DESCRIPTION, POSITION) VALUES (5, 2, 'In all seriousness ', 1);
INSERT INTO SKILL_DESCRIPTION (ID, SKILL_MAP_ID, DESCRIPTION, POSITION) VALUES (6, 2, 'I think this is a powerful tool that is worth the trouble. ', 2);
INSERT INTO SKILL_DESCRIPTION (ID, SKILL_MAP_ID, DESCRIPTION, POSITION) VALUES (7, 2, 'Now users can provide as much or as little information as they want. ', 3);
INSERT INTO SKILL_DESCRIPTION (ID, SKILL_MAP_ID, DESCRIPTION, POSITION) VALUES (8, 2, 'Without harsh memory costs to the system... Enjoy!', 4);

INSERT INTO COORDINATE (ID, LONGITUDE, LATITUDE) VALUES (1, 45.00321, -84.24352);
INSERT INTO COORDINATE (ID, LONGITUDE, LATITUDE) VALUES (2, -134.03245, 38.88832);

INSERT INTO LOCATION (ID, USER_ID, COORDINATE_ID, NAME, RADIUS_METERS)
VALUES (1, 1, 1, 'HOME', 25);
INSERT INTO LOCATION (ID, USER_ID, COORDINATE_ID, NAME, RADIUS_METERS)
VALUES (2, 1, 2, 'WORK', 512);

INSERT INTO PARTICIPANT (ID, EVENT_TIME_ID, USER_ID) VALUES (1, 1, 1);
INSERT INTO PARTICIPANT (ID, EVENT_TIME_ID, USER_ID) VALUES (2, 1, 2);
INSERT INTO PARTICIPANT (ID, EVENT_TIME_ID, USER_ID) VALUES (3, 1, 3);
INSERT INTO PARTICIPANT (ID, EVENT_TIME_ID, USER_ID) VALUES (4, 1, 4);
INSERT INTO PARTICIPANT (ID, EVENT_TIME_ID, USER_ID) VALUES (5, 1, 5);
INSERT INTO PARTICIPANT (ID, EVENT_TIME_ID, USER_ID) VALUES (6, 1, 6);

INSERT INTO PROFILE_LINK (ID, USER_ID_1, USER_ID_2, CREATOR_ID, IS_GOOD, REASON) VALUES (1, 1, 4, 4, 0, 'Contributer = 4');
INSERT INTO PROFILE_LINK (ID, USER_ID_1, USER_ID_2, CREATOR_ID, IS_GOOD, REASON) VALUES (2,15, 1, 9, 1, 'Contributer = 9');
INSERT INTO PROFILE_LINK (ID, USER_ID_1, USER_ID_2, CREATOR_ID, IS_GOOD, REASON) VALUES (3,14, 13, 8, 1, 'Contributer = 8');
INSERT INTO PROFILE_LINK (ID, USER_ID_1, USER_ID_2, CREATOR_ID, IS_GOOD, REASON) VALUES (4,14, 15, 3, 1, 'Contributer = 3');

INSERT INTO RATING
    (ID, ATTRIBUTER_ID, RECIEVER_ID, DESCRIPTION, TIME_STAMP, VALUE, ATTRIBUTER_SNAPSHOT_RATING)
    VALUES (1, 2, 1, 'Joy to work with!', TO_TIMESTAMP('10-SEP-0214:10:10.123000','DD-MON-RRHH24:MI:SS.FF')
    , 9, 7);

INSERT INTO RATING
    (ID, ATTRIBUTER_ID, RECIEVER_ID, DESCRIPTION, TIME_STAMP, VALUE, ATTRIBUTER_SNAPSHOT_RATING)
    VALUES (2, 5, 1, 'He is a vicious beast!', TO_TIMESTAMP('10-OCT-0214:10:10.123000','DD-MON-RRHH24:MI:SS.FF')
    , 0, 9);

INSERT INTO RATING
    (ID, ATTRIBUTER_ID, RECIEVER_ID, DESCRIPTION, TIME_STAMP, VALUE, ATTRIBUTER_SNAPSHOT_RATING)
    VALUES (3, 4, 1, 'I like chicken I like liver...', TO_TIMESTAMP('10-NOV-0214:10:10.123000','DD-MON-RRHH24:MI:SS.FF')
    , 9, 1);

    INSERT INTO CATEGORY (ID, NAME, ATTEND_DESCRIPTION, POST_DESCRIPTION) VALUES (1,'Volunteer',
    'Volunteer activities are intended to be unpaid, but make up for it by providing experiance and in some cases a sence of purpose.',
    'Posting in the volunteer category portarys this event/activaty as promoting the intrests of the comunity.');
    INSERT INTO CATEGORY (ID, NAME, ATTEND_DESCRIPTION, POST_DESCRIPTION) VALUES (2,'Charity',
    'Charity activities are supposed to help the disadvantaged: sick, poor, elderly, diabled. It can be gradifying work, try to keep in mind a spotter is better than superman.',
    'The charity category is reserved for helping disadvantaged members of your community. i.e. sick, poor, elderly, disabled...');
    INSERT INTO CATEGORY (ID, NAME, ATTEND_DESCRIPTION, POST_DESCRIPTION) VALUES (3,'Educational',
    'Educational activities should be similar to traditional schooling, a relative subject matter expert leading, with frequent interuptions by the audience',
    'Educational posts are ment for knowledgeable individuals who can benifit and learn from an interactive audience.');
    INSERT INTO CATEGORY (ID, NAME, ATTEND_DESCRIPTION, POST_DESCRIPTION) VALUES (4,'Trade',
    'Trade posts should entail a skill focus. Should feel like a job only more forgiving and patient',
    'To post in the trade section you should have activities that develope specific skills. Participants should build, organize or operate somthing.');
    INSERT INTO CATEGORY (ID, NAME, ATTEND_DESCRIPTION, POST_DESCRIPTION) VALUES (5,'Social',
    'Social activiaties are for exploring new ideas or general disscusions over broad topics',
    'If you are posting in social, you should not desire to be the center of attention. It should be a free formed interaction, a sterio typical wine and cheese party.');
    INSERT INTO CATEGORY (ID, NAME, ATTEND_DESCRIPTION, POST_DESCRIPTION) VALUES (6,'Active',
    'Your mind is an amazing tool, but dont neglect your body. The active category is for sports and other group physical activities.',
    'People expect to be active. Sports, outdoor activities, anything that gets your heart rate up!');
    INSERT INTO CATEGORY (ID, NAME, ATTEND_DESCRIPTION, POST_DESCRIPTION) VALUES (7,'Distress',
    'People posting in destress have found themselves in a poor situation and need help. The idea is that these people have almost always been self sufficient, its just a run of bad luck.',
    'Only post in the destress category if you are in an atypically bad situation. i.e. you lost the job you have had for 10 years, not I lost my job i have only been employed 2 of the last 10 years.');
    INSERT INTO CATEGORY (ID, NAME, ATTEND_DESCRIPTION, POST_DESCRIPTION) VALUES (8,'Siminar',
    'People posting in the Siminar category are subject matter experts (Maybe just self proclaimed). These people should be capable of covering a topic thouroughly with no feedback from the audience.',
    'If you are posing in the siminar category you need to be extremely knowledgeable on the topics to cover. If you have not ingaged in edjucation or social events of these topics, we strongly recommend you try them first.');
