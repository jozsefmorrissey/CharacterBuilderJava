
--==========================  TABLES  =====================--

CREATE TABLE PERMISSION (
  ID NUMBER PRIMARY KEY,
  PERMISSION_LEVEL VARCHAR2(16)
);

CREATE TABLE CB_USER (
  ID NUMBER PRIMARY KEY,
  NAME VARCHAR2(64),
  EMAIL VARCHAR2(128) UNIQUE,
  PHONE_NUMBER NUMBER(11),
  PERMISSION_ID NUMBER,
  PASSWORD VARCHAR(128),
  LAST_LOCATION_ID NUMBER(2),
  PHOTO BLOB,
  CONSTRAINT FK_USER_PERMISSION FOREIGN KEY (PERMISSION_ID) REFERENCES PERMISSION(ID)
);

CREATE TABLE COORDINATE (
  ID NUMBER PRIMARY KEY,
  LONGITUDE NUMBER(8,5),
  LATITUDE NUMBER(7,5)
);

CREATE TABLE LOCATION (
  ID NUMBER PRIMARY KEY,
  USER_ID NUMBER,
  COORDINATE_ID NUMBER,
  NAME VARCHAR2(32),
  RADIUS_METERS NUMBER(8),
  CONSTRAINT FK_LOCATION_USER FOREIGN KEY (USER_ID) REFERENCES CB_USER(ID),
  CONSTRAINT FK_LOCATION_COORDINATE FOREIGN KEY (COORDINATE_ID) REFERENCES COORDINATE(ID)
);

CREATE TABLE EVENT (
  ID NUMBER PRIMARY KEY,
  TITLE VARCHAR2(128),
  POSTER_ID NUMBER
);

CREATE TABLE EVENT_IMAGE (
    ID NUMBER PRIMARY KEY,
    EVENT_ID NUMBER,
    PHOTO BLOB,
    POSITION NUMBER (2),
    CONSTRAINT FK_EVENT_IMAGE_EVENT FOREIGN KEY (EVENT_ID) REFERENCES EVENT(ID)
);

CREATE TABLE SKILL(
  ID NUMBER PRIMARY KEY,
  NAME VARCHAR2(32) UNIQUE
);

CREATE TABLE  SKILL_MAP(
  ID NUMBER PRIMARY KEY,
  SKILL_ID NUMBER,
  EVENT_ID NUMBER,
  ATTRIBUTER_ID NUMBER,
  RECIEVER_ID NUMBER,
  VALUE NUMBER(1),
  ATTRIBUTER_SKILL_VALUE NUMBER(1),
  CONSTRAINT FK_EVENT_ID_EVENT FOREIGN KEY (EVENT_ID) REFERENCES EVENT(ID),
  CONSTRAINT FK_ATTRIBUTER_ID_USER FOREIGN KEY (ATTRIBUTER_ID) REFERENCES CB_USER(ID),
  CONSTRAINT FK_RECIEVER_ID_USER FOREIGN KEY (RECIEVER_ID) REFERENCES CB_USER(ID),
  CONSTRAINT FK_SKILL_MAP_SKILL FOREIGN KEY (SKILL_ID) REFERENCES SKILL(ID),
  CONSTRAINT RECIEVER_ATTRIBUTER_NOT_EQ CHECK (ATTRIBUTER_ID != RECIEVER_ID)
);

CREATE TABLE SKILL_DESCRIPTION (
    ID NUMBER PRIMARY KEY,
    SKILL_MAP_ID NUMBER,
    DESCRIPTION VARCHAR(256),
    POSITION NUMBER(3),
    CONSTRAINT FK_SKILL_DESCRIPTION_MAP FOREIGN KEY (SKILL_MAP_ID) REFERENCES SKILL_MAP(ID)
);

CREATE TABLE EVENT_DESCRIPTION (
    ID NUMBER PRIMARY KEY,
    EVENT_ID NUMBER,
    DESCRIPTION VARCHAR(256),
    POSITION NUMBER(3),
    CONSTRAINT FK_EVENT_DESCRIPTION_MAP FOREIGN KEY (EVENT_ID) REFERENCES EVENT(ID)
);

CREATE TABLE EVENT_TIME (
  ID NUMBER PRIMARY KEY,
  EVENT_ID NUMBER,
  TIME_STAMP TIMESTAMP,
  CONSTRAINT FK_EVENT_TIME_EVENT FOREIGN KEY (EVENT_ID) REFERENCES EVENT(ID)
);

CREATE TABLE PARTICIPANT (
  ID NUMBER,
  EVENT_TIME_ID NUMBER,
  USER_ID NUMBER,
  CONSTRAINT FK_PARTICIPANT_EVENT_TIME FOREIGN KEY (EVENT_TIME_ID) REFERENCES EVENT_TIME(ID),
  CONSTRAINT FK_PARTICIPANT_USER FOREIGN KEY (USER_ID) REFERENCES CB_USER(ID),
  CONSTRAINT COMP_PK_PARTICIPANT PRIMARY KEY (ID, EVENT_TIME_ID, USER_ID)
);

CREATE TABLE PROFILE_LINK {
  ID NUMBER,
  ID USER_ID_1 NUMBER,
  ID USER_ID_2 NUMBER,
  IS_GOOD BOOLEAN,
  REASON VARCHAR2(256),
  CONSTRAINT FK_LINK_USER_ID_USER_1 FOREIGN KEY (USER_ID_1) REFERENCES CB_USER(ID),
  CONSTRAINT FK_LINK_USER_ID_USER_2 FOREIGN KEY (USER_ID_2) REFERENCES CB_USER(ID)
};

CREATE TABLE RATING {
  ID NUMBER,
  ATTRIBUTER_ID NUMBER,
  RECIEVER_ID NUMBER,
  VALUE NUMBER(1),
  ATTRIBUTER_CURR_RATING NUMBER(1),
  CONSTRAINT FK_RAT_ATTRIBUTER_ID_USER FOREIGN KEY (ATTRIBUTER_ID) REFERENCES CB_USER(ID),
  CONSTRAINT FK_RAT_RECIEVER_ID_USER FOREIGN KEY (RECIEVER_ID) REFERENCES CB_USER(ID)
};
